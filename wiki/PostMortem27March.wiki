#summary Release 2 Iteration 2

= Introduction =

Sent in 27th March


= Details =

Accomplishments
 Completed tasks for feature: #All Continue improvements to
installation process
  1. Implement changes to the installation process as recommended by
John - Don.
 Acceptance test(s) passed: #All Continue improvements to installation process

 Completed tasks for feature: #3 Process "Roadmaps"
  1. Integrated the provided XML tools - Don.
  2. Updated the application to support generating PML graphs from
XML source files - Don.
 Acceptance test(s) passed: #3 Process "Roadmaps"

 Completed tasks for feature: #4 Maintainer specifying rules using "OR"
  1. Engine supports the logical 'OR'ing of facts and fires
recommendations (the user interface will be redesigned to handle this
over the next iteration) - Cyril.
 Acceptance test(s) passed: #4 Maintainer specifying rules using "OR"

Obstacles
1. Clickable graphs turned out to be more complex than conceived of.
Mitigation: We plan to look at some alternative approaches to the
problem next iteration.

Objectives
 Feature: #1 'Clickable' PML graphs
 1. Find a way to implement additional functionality into the PML
image such as a hyperlink to another webpage or additional textual
information to supplement the information in the graph - Don.

 Feature: #6 Rules assert facts as well as rec.
 1. Implement the assertion of facts based on rules specified by
maintainers - Don.

 Feature: #7 Facts determine whether questions are asked
 1. Modify application to dynamically ask the user questions based on
the currently stored/inferred set of facts for a line of questioning -
Don.

 Feature: #8 Feedback to user progress & reasoning behind recs.
 1. Change the application appropriately so that the user can view the
source of the reasoning behind the recommendations that they have been
given (e.g. from profile settings, question answers, derived facts
etc.) - Don.

 Feature: #5 "improved" rule specification
 1. Redesign the UI to allow maintainers to specify rule expressions
easily - Cyril.

 Feature: #9 Allow user to revise answers
 Modify the current implementation in order to allow a user to revisit
the set of questions they had previously been served with in order to
modify their responses and thus get a revised set of recommendations -
Cryil.

 Feature: #11 Save state (Save flight sim state)
 Generally improve the saving of state for users building on the
current basic implementation of functionality - Cyril.

 Feature: #Documentation
 Improve the feature documentation quality in order to communicate how
to operate and view the specific features to users of the system -
Se√°n.